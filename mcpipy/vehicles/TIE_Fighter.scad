blockScale = 1;
sideOverlap = 0.2;
sideLength = blockScale * (1+2*sideOverlap);

blockScale = 1;
sideOverlap = 0.2;
sideLength = blockScale * (1+2*sideOverlap);            
module block(x,y,z,r,g,b,a) {
    color([r,g,b,a]) translate([x*blockScale,y*blockScale,z*blockScale]) cube(sideLength);
}
module object() {
block(-2,-5,1,0.250980,0.250980,0.250980,1.000000);
block(-3,-2,-1,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,2,0.250980,0.250980,0.250980,1.000000);
block(-1,-5,1,0.250980,0.250980,0.250980,1.000000);
block(-2,-2,4,0.250980,0.250980,0.250980,1.000000);
block(1,-3,1,0.098039,0.098039,0.098039,0.250980);
block(0,-4,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-3,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-1,4,0.250980,0.250980,0.250980,1.000000);
block(1,-3,0,0.098039,0.098039,0.098039,0.250980);
block(-2,-5,4,0.250980,0.250980,0.250980,1.000000);
block(0,-2,4,0.250980,0.250980,0.250980,1.000000);
block(0,-2,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-3,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-4,4,0.250980,0.250980,0.250980,1.000000);
block(-1,-1,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-5,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,-3,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,-2,0.250980,0.250980,0.250980,1.000000);
block(0,-1,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-1,-1,0.250980,0.250980,0.250980,1.000000);
block(0,-5,-1,0.250980,0.250980,0.250980,1.000000);
block(-1,-6,4,0.250980,0.250980,0.250980,1.000000);
block(1,-4,-1,0.250980,0.250980,0.250980,1.000000);
block(0,-3,2,0.250980,0.250980,0.250980,1.000000);
block(-1,0,-4,0.250980,0.250980,0.250980,1.000000);
block(-2,-2,-4,0.250980,0.250980,0.250980,1.000000);
block(-3,-4,0,0.250980,0.250980,0.250980,1.000000);
block(-1,-2,4,0.250980,0.250980,0.250980,1.000000);
block(-3,-4,1,0.250980,0.250980,0.250980,1.000000);
block(1,-4,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-4,2,0.250980,0.250980,0.250980,1.000000);
block(-2,-5,0,0.250980,0.250980,0.250980,1.000000);
block(1,-2,4,0.250980,0.250980,0.250980,1.000000);
block(-3,-2,4,0.250980,0.250980,0.250980,1.000000);
block(-1,-4,-4,0.250980,0.250980,0.250980,1.000000);
block(-3,-4,4,0.250980,0.250980,0.250980,1.000000);
block(-3,-3,-4,0.250980,0.250980,0.250980,1.000000);
block(1,-3,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-3,4,0.250980,0.250980,0.250980,1.000000);
block(1,-2,0,0.098039,0.098039,0.098039,0.250980);
block(-2,-2,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-1,1,0.250980,0.250980,0.250980,1.000000);
block(-2,-4,2,0.250980,0.250980,0.250980,1.000000);
block(1,-2,1,0.098039,0.098039,0.098039,0.250980);
block(0,-4,2,0.250980,0.250980,0.250980,1.000000);
block(1,-2,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-2,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-1,-1,0.250980,0.250980,0.250980,1.000000);
block(-3,-3,-1,0.250980,0.250980,0.250980,1.000000);
block(0,-3,-2,0.250980,0.250980,0.250980,1.000000);
block(-1,-5,4,0.250980,0.250980,0.250980,1.000000);
block(1,-2,-1,0.098039,0.098039,0.098039,0.250980);
block(0,-4,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-1,-1,0.250980,0.250980,0.250980,1.000000);
block(-3,-3,1,0.250980,0.250980,0.250980,1.000000);
block(-2,-5,-4,0.250980,0.250980,0.250980,1.000000);
block(-3,-3,0,0.250980,0.250980,0.250980,1.000000);
block(1,-3,-1,0.098039,0.098039,0.098039,0.250980);
block(-2,-4,4,0.250980,0.250980,0.250980,1.000000);
block(1,-4,4,0.250980,0.250980,0.250980,1.000000);
block(-2,-1,0,0.250980,0.250980,0.250980,1.000000);
block(0,-4,4,0.250980,0.250980,0.250980,1.000000);
block(-2,-4,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-4,-2,0.250980,0.250980,0.250980,1.000000);
block(-2,-2,2,0.250980,0.250980,0.250980,1.000000);
block(-1,-5,-1,0.250980,0.250980,0.250980,1.000000);
block(-2,-3,4,0.250980,0.250980,0.250980,1.000000);
block(-3,-3,4,0.250980,0.250980,0.250980,1.000000);
block(-3,-4,-1,0.250980,0.250980,0.250980,1.000000);
block(0,-1,4,0.250980,0.250980,0.250980,1.000000);
block(0,-3,-4,0.250980,0.250980,0.250980,1.000000);
block(1,-4,0,0.250980,0.250980,0.250980,1.000000);
block(-1,-6,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-1,4,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,-4,0.250980,0.250980,0.250980,1.000000);
block(1,-4,1,0.250980,0.250980,0.250980,1.000000);
block(-3,-4,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-2,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,4,0.250980,0.250980,0.250980,1.000000);
block(0,-1,1,0.250980,0.250980,0.250980,1.000000);
block(-1,-2,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-1,0,0.250980,0.250980,0.250980,1.000000);
block(-2,-3,2,0.250980,0.250980,0.250980,1.000000);
block(-3,-2,1,0.250980,0.250980,0.250980,1.000000);
block(-1,-3,3,0.250980,0.250980,0.250980,1.000000);
block(-2,-4,-2,0.250980,0.250980,0.250980,1.000000);
block(0,-5,0,0.250980,0.250980,0.250980,1.000000);
block(-1,-2,2,0.250980,0.250980,0.250980,1.000000);
block(0,-2,2,0.250980,0.250980,0.250980,1.000000);
block(-2,-1,-4,0.250980,0.250980,0.250980,1.000000);
block(0,-5,1,0.250980,0.250980,0.250980,1.000000);
block(-1,-1,1,0.250980,0.250980,0.250980,1.000000);
block(-2,-5,-1,0.250980,0.250980,0.250980,1.000000);
block(-1,-5,-4,0.250980,0.250980,0.250980,1.000000);
block(-1,-1,0,0.250980,0.250980,0.250980,1.000000);
block(-3,-2,0,0.250980,0.250980,0.250980,1.000000);
block(-3,-2,-4,0.250980,0.250980,0.250980,1.000000);
block(1,-3,4,0.250980,0.250980,0.250980,1.000000);
block(-1,-5,0,0.250980,0.250980,0.250980,1.000000);
block(0,-5,4,0.250980,0.250980,0.250980,1.000000);
block(-1,0,4,0.250980,0.250980,0.250980,1.000000);
}
object();
